<style>
    form {
        padding-bottom: 10px;
    }
</style>
<form id="registration">
    <fieldset>
        <legend>Registration</legend>
        <label>username<input type="text" name="username"></label>
        <label>password<input type="password" name="password"></label>
        <label>email<input type="email" name="email"></label>
        <button type="submit">registration</button>
    </fieldset>

</form>
<form id="login">
    <fieldset>
        <legend>Log in</legend>
        <label>username<input type="text" name="username"></label>
        <label>password<input type="password" name="password"></label>
        <button type="submit">login</button>
    </fieldset>
</form>
<form id="token">
    <fieldset>
        <legend>test token</legend>
        <label><input type="text" name="token"></label>
        <button type="submit">token</button>
    </fieldset>

</form>
<form id="sendemailpass">
    <fieldset>
        <legend>Sent email pass</legend>
        <label>username<input type="text" name="username"></label>
        <button type="submit">send email pass</button>
    </fieldset>

</form>
<form id="newpassword">
    <fieldset>
        <legend>New password</legend>
        <label>new password<input type="text" name="token"></label>
        <label>new password<input type="password" name="password"></label>
        <button type="submit">send email pass</button>
    </fieldset>

</form>
<form id="logout">
    <fieldset>
        <legend>logout</legend>
        <label>token<input type="text" name="token"></label>
        <button type="submit">logout</button>
    </fieldset>

</form>
<form id="refreshtoken">
    <fieldset>
        <legend>refreshtoken</legend>
        <label>longToken<input type="text" name="longToken"></label>
        <button type="submit">refreshtoken</button>
    </fieldset>
</form>
<form id="test">
    <fieldset>
        <legend>test</legend>
        <label>token<input type="text" name="token"></label>
        <button type="submit">test</button>
    </fieldset>
</form>
<form id="getSMSСodeForRegistrationByTelephone">
    <fieldset>
        <legend>getSMSСodeForRegistrationByTelephone</legend>
        <label>telephoneNumber<input type="text" name="telephoneNumber"></label>
        <label>serialNumberOfPhone<input type="text" name="serialNumberOfPhone"></label>
        <button type="submit">getSMSСodeForRegistrationByTelephone</button>
    </fieldset>
</form>
{{!-- <form id="experiment">
    <label>data<input type="text" name='data'></label>
    <button type="submit">send data</button>
</form> --}}
<script>
    /* document.getElementById('experiment').addEventListener('submit', (evt) => {
        evt.preventDefault()
        const form = evt.target
        const body = JSON.stringify({data: form.elements.data.value})
        fetch('http://localhost:3000/api/experiment-db', {
            method: 'POST',
            headers: new Headers({'Content-Type': 'application/json'}),
            body
        })
    }) */
    document.getElementById('getSMSСodeForRegistrationByTelephone').addEventListener('submit', (evt) => {
        evt.preventDefault()
        const form = evt.target
        const body = JSON.stringify({
            telephoneNumber: form.elements.telephoneNumber.value,
            serialNumberOfPhone: form.elements.serialNumberOfPhone.value
        })  
        fetch('http://localhost:3000/api/getSMSCodeForRegistrationByTelephone', {
            method: 'POST',
            headers: new Headers(
                {
                    'Content-Type': 'application/json'
                }
            ),
            body
        })  
    })
    document.getElementById('test').addEventListener('submit', (evt) => {
        evt.preventDefault()
        const form = evt.target
        const body = JSON.stringify({
            token: form.elements.token.value
        })  
        fetch('http://localhost:3000/api/test', {
            method: 'POST',
            headers: new Headers(
                {
                    'Content-Type': 'application/json'
                }
            ),
            body
        })  
    })
    document.getElementById('refreshtoken').addEventListener('submit', (evt) => {
        evt.preventDefault()
        const form = evt.target
        const body = JSON.stringify({
            longToken: form.elements.longToken.value
        })  
        fetch('http://localhost:3000/api/refreshtoken', {
            method: 'POST',
            headers: new Headers(
                {
                    'Content-Type': 'application/json'
                }
            ),
            body
        })  
    })
    document.getElementById('logout').addEventListener('submit', (evt) => {
        evt.preventDefault()
        const form = evt.target
        const body = JSON.stringify({
            token: form.elements.token.value
        })
        fetch('http://localhost:3000/api/logout', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json'
            }),
            body
        })
    })
    document.getElementById('newpassword').addEventListener('submit', (evt) => { // не закончено
        evt.preventDefault();
        const form = evt.target
        const body = JSON.stringify({
            username: form.elements.username.value,
            password: form.elements.password.value,
            email: form.elements.email.value
        })
        fetch('http://localhost:3000/api/signup', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json',
            }),
            body
        })
    })
    document.getElementById('registration').addEventListener('submit', (evt) => {
        evt.preventDefault();
        const form = evt.target
        const body = JSON.stringify({
            username: form.elements.username.value,
            password: form.elements.password.value,
            email: form.elements.email.value
        })
        fetch('http://localhost:3000/api/signup', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json',
            }),
            body
        })
    })

    document.getElementById('login').addEventListener('submit', (evt) => {
        evt.preventDefault();
        const form = evt.target
        const body = JSON.stringify({
            username: form.elements.username.value,
            password: form.elements.password.value
        })
        fetch('http://localhost:3000/api/login/password', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json',
            }),
            body
        })
    })

    document.getElementById('token').addEventListener('submit', (evt) => {
        evt.preventDefault();
        const form = evt.target
        const body = JSON.stringify({
            token: form.elements.token.value,
        })
        fetch('http://localhost:3000/api/test', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json',
            }),
            body
        })
    })
    document.getElementById('sendemailpass').addEventListener('submit', (evt) => {
        evt.preventDefault();
        const form = evt.target
        const body = JSON.stringify({
            username: form.elements.username.value,
        })
        fetch('http://localhost:3000/api/sendemailpass', {
            method: 'POST',
            headers: new Headers({
                'Content-Type': 'application/json',
            }),
            body
        })
    })

</script>